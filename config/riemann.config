;; setup to setup riemann and elasticsearch to
;; work as monitoring/log backend for
;; Kibana and Grafana


;; global configuration to adapt to specific infrastructure
(def binding-ip "0.0.0.0")
(def elastic-url "http://192.168.2.1:9200")



;; This is where the logging of riemann goes to.
(logging/init {:file "riemann.log" :console true})


; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host binding-ip]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))


;; Integrate with Elasticsearch (ES)
(require '[riemann.elastic :as elastic])
(def elastic-conn (elastic/es-connect elastic-url))

;; Load up some index mappings that optimize for time-series data
;; (elastic/load-index-template "default" "config/default-mapping.json")


(def index-sink (default :ttl 300 (index)))

(def elastic-sink
  "write events to elastic search and the Riemann index"
  (let [sinks [(async-queue! :elastic-search
                             {:queue-size 10000}
                             (batch 200 10 (elastic/es-index "logmon")))]]
    (fn [e]
      (call-rescue e sinks))))

(streams
  prn
  elastic-sink
  index-sink)
